Project Given by:
Professor: Cuneyt Akcora
University: University of Texas at Dallas

Project 1:

Question 1:
Find the distribution of how many times a user 1 - buys, 2 - sells a token. 
Which discrete distribution type fits these distributions best? Estimate distribution parameters.

Question 2:
How can we create layers of transactions with increasing amounts? This descriptive statistic is similar to bin selection in histograms. 
For example, we could choose layer1 as those transactions that involve 0.01×maxt in amount. Find a good value for the number of layers and justify your choice.

Once you create layers, you can compute a feature in each layer. An example feature is the number of transactions, another one is the number of unique buyers. 
As each edge has a unix timestamp, it is easy to compute the edge time to a date. For example, 1294226315 is equivalent to 01/05/2011 @ 11:18am (UTC). 
See the website https://www.unixtimestamp.com/index.php for unix time conversion. 
R has functions to compute dates from unix time stamps as well. This way, for a given day you can find all layer transactions in that day.

For example, you can say on 10/12/2018 there were 25 transactions in layer 1. The price of token on that date was 3.2$.
 For each day in a token’s history, you can then correlate price vs feature in time.

Find an algorithm to compute the correlation of price data with each of the layers (hint: start by looking at Pearson correlation).

Question 3:
This question is similar to the first question. You will find the most active buyers and sellers in your primary token network, and track them in other tokens. 
Fit a distribution for the number of unique tokens they invest in. 
For this question, you need to use networks of all tokens, and see if your buyers/sellers appear in them.

Project 2:

We denote the token price in dollar as Pt for the tth day. Simple price return is given as Pt-Pt-1/Pt-1.

Extract at least three features from the token network at day t-1
and create a multiple linear regression model to explain price return on day t.
In this task, you can choose to extract features from a single layer computed in project 1, or you can use all network data. 
If you use a layer approach, you can build the model on data from a single layer only.

You are free to choose any feature (regressor). Your features can be in terms of numbers (x1=
number of transactions), percentages (x1=percentage of investors who bought more than 10 tokens), etc. 
Similarly, you could transform your regressors (x1=square root of number of transactions).

In some tokens you may not find three useful features to use in the model. 
In that case, please explain the candidate features that you tried. 
If needed, you can create a single regressor model as well. Similarly, you can go beyond three regressors.

Finding which features to extract from a dataset is called feature engineering.

Present your regression model, explain residuals and discuss your findings. Explain the adequacy of your regression model.